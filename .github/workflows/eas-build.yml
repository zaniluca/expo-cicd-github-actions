name: Build and submit

on:
  workflow_dispatch:

jobs:
  build-and-submit:
    name: Build and submit
    runs-on: ubuntu-latest
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      # The EXPO_APPLE_APP_SPECIFIC_PASSWORD and EXPO_APPLE_ID are required for Apple builds.
      # They're used for appstore submission.
      - name: Check for EXPO_APPLE_APP_SPECIFIC_PASSWORD
        run: |
          if [ -z "${{ secrets.EXPO_APPLE_APP_SPECIFIC_PASSWORD }}" ]; then
            echo "You must provide an EXPO_APPLE_APP_SPECIFIC_PASSWORD to deploy to testflight"
          fi

      - name: Check for EXPO_APPLE_ID
        run: |
          if [ -z "${{ secrets.EXPO_APPLE_ID }}" ]; then
            echo "You must provide an EXPO_APPLE_ID to deploy to testflight"
          fi

      - name: Checkout repository
        uses: actions/checkout@v2

      # Trying to install dependecies from cache
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit == 'false' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install

      - name: Setup Expo
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      # With the flag --auto-submit the build will be submitted to testflight / play store  automatically.
      # The app will not be released without manual action
      - name: Build and Submit
        run: eas build --platform all --non-interactive --auto-submit
